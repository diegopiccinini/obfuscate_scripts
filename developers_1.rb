#!/usr/bin/env ruby
require 'rubygems'
require 'my_obfuscate'


obfuscator = MyObfuscate.new({
adaptive_payment_callbacks: :keep,
adaptive_payment_logs: :keep,
addresses: :keep,
admin_email_keys: :keep,
administrators: :keep,
affiliate_answers: :keep,
affiliate_companies: :keep,
affiliate_counters: :keep,
affiliate_links: :keep,
affiliate_payments: :keep,
affiliate_prices: :keep,
affiliate_question_items: :keep,
affiliate_questions: :keep,
affiliate_widget_settings: :keep,
agreed_policies: :keep,
alert_acks: :keep,
alerts: :keep,
announcements: :keep,
attachments: :keep,
attendances: :keep,
auth_tokens: :keep,
bdrb_job_queues: :keep,
bill_advance_payments: :keep,
bill_authorizations: :keep,
bill_business_payments: :keep,
bill_company_account_details: :keep,
bill_direct_payments: :keep,
bill_payment_callbacks: :keep,
bill_payment_logs: :keep,
bill_payments: :keep,
bill_refund_payments: :keep,
bill_refund_penalties: :keep,
bill_site_charges: :keep,
bill_subscription_logs: :keep,
bill_subscriptions: :keep,
bookables: :keep,
bookers: :keep,
booking_changes_logs: :keep,
booking_logs: :keep,
bookings_details: :keep,
cache_event_days: :keep,
cache_person_days: :keep,
cache_resource_days: :keep,
cache_service_days: :keep,
cals: :keep,
categories: :keep,
category_local_names: :keep,
category_services: :keep,
client_queues: :keep,
clinics: :keep,
clinics_people: :keep,
clinics_resources: :keep,
clinics_services: :keep,
companies: {
    :name                      => { :type => :lorem, number: 4 }
  },
company_templates: :keep,
conf_connections: :keep,
conf_custom_texts: :keep,
conf_emails: :keep,
conf_extra_answers: :keep,
conf_extra_question_items: :keep,
conf_extra_questions: :keep,
conf_homepages: :keep,
conf_insets: :keep,
conf_languages: :keep,
conf_payments: :keep,
conf_payments_old: :keep,
conf_pos_items: :keep,
conf_reasons: :keep,
conf_settings: :keep,
conf_texts: :keep,
cronjob_logs: :keep,
date_reminders: :keep,
delayed_jobs: :keep,
detail_groups: :keep,
detail_maps: :keep,
detail_type_items: :keep,
detail_types: :keep,
discount_codes: :keep,
email_logs: :keep,
email_templates: :keep,
esubtypes: :keep,
etypes: :keep,
events: :keep,
exchange_subscriptions: :keep,
extensions: :keep,
external_purchases: :keep,
groups: :keep,
held_items: :keep,
help_overlays: :keep,
helps: :keep,
image_texts: :keep,
ipns: :keep,
linked_images: :keep,
logins: :keep,
media_flickrs: :keep,
media_images: :keep,
media_links: :keep,
media_videos: :keep,
member_child_maps: :keep,
members: :keep,
memberships: :keep,
notes: :keep,
old_passwords: :keep,
package_maps: :keep,
packages: :keep,
payment_events: :keep,
payment_invoices: :keep,
payment_plans: :keep,
pdf_ticket_details: :keep,
pdf_tickets: :keep,
people: :keep,
people_client_queues: :keep,
permissions: :keep,
plugin_schema_info: :keep,
policy_updates: :keep,
postcodes: :keep,
pre_payment_logs: :keep,
pre_payment_payment_logs: :keep,
pre_payment_payments: :keep,
pre_payment_safe_bands: :keep,
pre_payment_saves: :keep,
pre_payment_wallets: :keep,
price_block_coupons: :keep,
price_blocks: :keep,
price_coupons: :keep,
price_groups: :keep,
price_package_coupons: :keep,
price_pool_prices: :keep,
price_pools: :keep,
price_service_coupons: :keep,
price_session_coupons: :keep,
price_single_prices: :keep,
price_types: :keep,
price_voucher_types: :keep,
price_vouchers: :keep,
products: :keep,
public_pages: :keep,
purchase_item_logs: :keep,
purchase_items: :keep,
purchase_totals: :keep,
push_notifiers: :keep,
push_registers: :keep,
queuers: :keep,
reminder_emails: :keep,
reminder_logs: :keep,
repeat_bookings: :keep,
repeat_rules: :keep,
report_files: :keep,
resources: :keep,
rules_groups: :keep,
rules_rules: :keep,
sales_pages: :keep,
schedule_prices: :keep,
schedule_ranges: :keep,
schedule_times: :keep,
schedules: :keep,
schema_migrations: :keep,
sent_mail_logs: :keep,
service_durations: :keep,
service_sessions: :keep,
services: :keep,
sessions: :keep,
sidekiq_jobs: :keep,
simple_captcha_data: :keep,
slots: :keep,
sms_logs: :keep,
space_detail_maps: :keep,
space_details: :keep,
spaces: :keep,
split_resource_names: :keep,
sponsor_bars: :keep,
sponsor_categories: :keep,
sponsor_details: :keep,
statuses: :keep,
subscriptions: :keep,
system_stats: :keep,
translation_approvals: :keep,
translation_keys: :keep,
translation_languages: :keep,
translation_submissions: :keep,
translation_texts: :keep,
ui_content_pages: :keep,
ui_controller_actions: :keep,
ui_menu_items: :keep,
ui_permissions: :keep,
ui_roles: :keep,
ui_roles_permissions: :keep,
ui_site_controllers: :keep,
ui_system_settings: :keep,
ui_users: :keep,
viewed_announcements: :keep,
whitelabels: :keep,
widget_logs: :keep,
widget_sessions: :keep

})
obfuscator.fail_on_unspecified_columns = false # if you want it to require every column in the table to be in the above definition
obfuscator.globally_kept_columns = %w[id created_at updated_at] # if you set fail_on_unspecified_columns, you may want this as well
obfuscator.obfuscate(STDIN, STDOUT)
